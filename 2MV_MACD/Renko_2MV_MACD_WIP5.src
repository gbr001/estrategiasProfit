// Autor: Gustavo Brand (TODO colocar email)
// Fonte: Diferentes canais no youtube e ultimamente
//        o Canal Viver de Trade no youtube com o Henrique
//        tem trabalhado com um este tipo de setup 
//        em periodicidades maiores (15R pro WDO)

// Alvo principal: WDO com renko 8R no intraday
// Adaptado e testado com lucro no WIN 35R. 

// Indicacao de coloracao + Compra/Venda:

// Compra: no fechamento acima de medias exp 21 e 72 + 
//         MADC histograma 150,14,14 acima de 0 + 
//         apos candle branco do 2MV_Padrao.
// TODO: descrever as demais condições ativas que estão sendo verificadas.
 
// Venda: no fechamento abaixo de medias exp 21 e 72 + 
//         MADC histograma 150,14,14 abaixo de 0 + 
//         apos candle branco do 2MV_Padrao.

// Essa versao (WIP5) introduz a monitoracao e filtragem do saldo de agressao
//  Ainda está em estudo a melhor forma de usar isso.

// Versoes anteiores (WIP2, 3 e 4) experimentaram com a realizacao parcial
//  fazendo a entrada com 2 contratos e saindo rapidamente em 1 deles,
//  permitiram tanto a operacao com ordens parciais como sem ordens parciais
//  e a selecao via stopViaMedia que permitiu a selecao da forma de stop, 
//  via candleReverso ou media.


const
  RespiroTicks = 0; //7 ticks WDO == 3.5pts == 1 candle no 8R

  // TODO: verificar como aproveitar melhor os alvos de fibo
  //       nao estao em uso no momento
  AlvoFibo1 = 1.00;
  AlvoFibo2 = 1.61;
  AlvoFibo3 = 2.00;

  // Horario normal de operacao, que pode ser alterado nos parametros abaixo
  //horarioInicialPadrao = 0905;
  horarioInicialPadrao = 0930;
  //horarioInicialPadrao = 1000;
  //horarioInicialPadrao = 1030;
  //horarioInicialPadrao = 1100;
  horarioFinalPadrao = 1650;

input
  TwoMVPeriod(20);
  FastPeriodMMs(21);
  MediumPeriodMMs(72);
  StopPeriodMMs(9); //TODO: 9 periodos eh uma boa alternativa tambem

  LongPeriodMACD(150);
  FastPeriodMACD(14);
  SignalPeriodMACD(14);

  // Horarios limite de negociacao da estrategia
  // Em backtests foi verificado em operações durante a 1a hora
  // geravam menos retorno.  
  operarSegunda(true);
  operarTerca(true);
  operarQuarta(true);

  operarQuinta(false); // Quinta nao está operando
  //operarQuinta(true); 

  operarSexta(true);
  //operarSexta(false);

  horarioInicialSegunda(horarioInicialPadrao);
  horarioFinalSegunda(horarioFinalPadrao);
  horarioInicialTerca(horarioInicialPadrao);
  horarioFinalTerca(horarioFinalPadrao);
  horarioInicialQuarta(horarioInicialPadrao);
  horarioFinalQuarta(horarioFinalPadrao);
  horarioInicialQuinta(horarioInicialPadrao);
  horarioFinalQuinta(horarioFinalPadrao);
  horarioInicialSexta(horarioInicialPadrao);
  horarioFinalSexta(horarioFinalPadrao);

  // Valor do MACD histograma maximo aceito para entrada
  // TODO: analisar, pois nesse momento nao esta com um valor de corte
  //       que faca diferenca, esta deixando passar tudo
  macdMax(10000); // 10000 para WIN 35R; 20 pra WDO 8R passa tudo.
                    // TODO: analisar de 2000 a 4000 para o WIN 45R
                    // TODO: analisar de 10 para cima no WDO 8R

  macdMin(1); // Esse valor é levado em conta no MACD histograma
               // para que pelo menos 1 barra dentre as 3 ultimas
               // sera maior ou igual a macdMin. No caso do WDO 8R, 1
               // parece um valor minimo aceitavel, mas isso deve
               // ser alterado para outros ativos ou periodos.
               // TODO: pensar uma forma de calcular isso automaticamente

  // Realizacao parcial no 1o candle de lucro.
  realizacaoParcial(true);
  qtdeContratos(2);
  qtdeContratosParciais(1);
  // Valores ate 10pts se mostraram interessantes
  ptosRealizacaoParcialVenda(7); // TODO: trabalhar com diferentes alvos/cenarios
  ptosRealizacaoParcialCompra(7); // TODO: trabalhar com diferentes alvos/cenarios

  stopViaMedia(true); // Se verdadeiro sair via MM9, caso contrario via candle reverso
  // TODO: estudar colocar saida via stddev tambem.

  mmSaldoAgressao(200);
  desvioSaldoAgressao(1.3);

var
  R : Float;
  sFastMMs   : Float;
  sMediumMMs : Float;
  sStopMMs : Float;

  s2MVHigh : Float;
  s2MVLow : Float; 
  sMediumMMsMax : Float;
  sMediumMMsMin : Float;
  sMediumMMConstant : Float;

  sLongMACD   : Float; 
  sFastMACD   : Float;
  sSignalMACD : Float;
  macdval : Float;
  macdval2 : Float;
  macdDiff : Float;
  macdTrend : Float;
  macdmargin : Float; //Margem de aceite da operacao quando 
                      //em torno de 0. Valor de +- 1 para WDO 15R.

  stopInit         : Float;
  stopVarianceInit : Float;
  stopTrailing     : Float;

  buySignal : Boolean;
  sellSignal : Boolean;
  neutralCandle : Boolean;
  macdPositiveTrend : Boolean;
  macdNegativeTrend : Boolean;

  i : Integer;
  executeTrades : Boolean;

  EntradaC, StopC, AlvoCParcial : Real;
  EntradaV, StopV, AlvoVParcial : Real;
  balancoVolumeAgressao, mmVolumeAgressao, stddevVolumeAgressao: Real;
  bbSupAgressao, bbInfAgressao: Real;

  t_n, t, s_n, s, c, v, res : Real;
  buyVol, sellVol : Boolean;

begin // BEGIN 01

  // Caso se deseje entrar na operacao nao no rompimento do alvo 
  // mas com uma ordem limite alguns ticks acima ou abaixo, 
  // configurar o RespiroTicks. Nesse momento está zerado.
  R := RespiroTicks * MinPriceIncrement;

  // Setup do valor de trailing stop desejado.
  // Nesse momento isso não tem muita funcionalidade
  // pois as saidas estao ocorrendo pela ocorrencia de
  // um candle invertido/contrario. É uma melhoria a se 
  // fazer realizar um trailing stop decente.
  stopInit := Abs(Close-Open)*4; // Stops em 4 candles: 15R=21; 8R=9.5; 7R=9 
  stopVarianceInit := 0;
  stopTrailing := Abs(Close-Open)*4; // Stops em 4 candles: 15R=21; 8R=9.5; 7R=9
  macdmargin := 0;

  // Variaveis de controle para sinalizar entrada na compra, venda
  // ou se o 2MV_Padrao está neutro, sem sinalizacao positiva ou negativa 
  buySignal := false;
  sellSignal := false;
  neutralCandle := false;

  // Nota importante sobre o algoritmo no Profit:
  // Para se ter os valores de indicadores e medias 
  // calculados corretametne eh preciso que eles 
  // sejam executados em todos os momentos e nao somente
  // dentro de alguma condicao if/else.

  sFastMMs := MediaExp(FastPeriodMMs,Close);
  sMediumMMs := MediaExp(MediumPeriodMMs,Close);
  sStopMMs := MediaExp(StopPeriodMMs,Close);

  // Faixa em que na mm72 pode-se detectar um comportamento lateral.
  // Nesse caso, é verificado se em um intervalo/canal muito fino
  // os candles não estão em tendencia lateral.
  // TODO 1: analisar se faz sentido, pois diminiu o rendimento em backtests
  //         com um valor de 0.000026 ou 0.00003. 
  // TODO 2: usar isso em conjunto com a verificacao do MACD histograma ter
  //         valores menores que 1 (ou algo nesse patamar) em um intervalor
  //         dos ultimos 3 candles. 
  sMediumMMConstant := 0.0000001; // Valor de 0.000026 para cima impediu operacoes 
                                  // de exemplo stopadas entre 11 e 12h de 13/abr/2021. 
  sMediumMMsMax := sMediumMMs*(1+sMediumMMConstant);        
  sMediumMMsMin := sMediumMMs*(1-sMediumMMConstant);

  // Calculo do MACD, sinal do MACD e calculo manual do histograma
  // em macdTrend. Através desse ultimo conseguimos detectar se 
  // o MACD está em tendencia (seja positiva ou negativa) para entrar.
  macdval := MACD(LongPeriodMACD, FastPeriodMACD, SignalPeriodMACD)|0|;
  sSignalMACD := MediaExp(SignalPeriodMACD, macdval);
  macdTrend := macdval - sSignalMACD ;
  //plot(macdval);
  //plot2(sSignalMACD); // media que parece o traco mais longo

  // Calculo do indicador 2MV_Padrao
  s2MVHigh := Media(TwoMVPeriod, High); // de forma simples: Media(20, High) 
  s2MVLow := Media(TwoMVPeriod, Low);   // de forma simples: Media(20, Low)
  neutralCandle := ((Close <= s2MVHigh) and (Close >= s2MVLow));

  // TODO: trabalhar aqui com os exemplos da AgressVol que usa o AccAgressSaldo
  // (https://schillerapp.com/br/cursos/curso-completo-programacao-profitchart/histograma-saldo-agressao-basico/)

//  // Calculo de saldo de agressao com AccAgressSaldo
//  // Valores Nativos
//  t_n := Quantity;
//  // Total Nativo

//  s_n := AccAgressSaldo(1) - AccAgressSaldo(1)[1];
//  // Saldo Nativo

//  Se (Date <> Date[1]) entao
//    s_n := AccAgressSaldo(1);

//  // Valores Calculados
//  c := (t_n + s_n) / 2;
//  v := t_n - c;
//  res := c - v;  
//  Se c > v entao
//    SetPlotColor(3,65280)
//  Senao 
//    SetPlotColor(3,00255);
//  //plot3(res);

  // Calculo do volume de agressao com AgressionVolBalance;
  balancoVolumeAgressao := AgressionVolBalance;
  mmVolumeAgressao := MediaExp(mmSaldoAgressao, balancoVolumeAgressao);
  stddevVolumeAgressao := StdDevs(balancoVolumeAgressao, mmSaldoAgressao);
  bbSupAgressao := mmVolumeAgressao + (desvioSaldoAgressao * stddevVolumeAgressao);
  bbInfAgressao := mmVolumeAgressao - (desvioSaldoAgressao * stddevVolumeAgressao);

  buyVol := false;
  sellVol := false;
  Se (balancoVolumeAgressao >= bbSupAgressao) or 
     (balancoVolumeAgressao[1] >= bbSupAgressao) or 
     (balancoVolumeAgressao[2] >= bbSupAgressao) or 
     (balancoVolumeAgressao[3] >= bbSupAgressao) or 
     (balancoVolumeAgressao[4] >= bbSupAgressao) or 
     false entao
    begin
      //SetPlotColor(3,clVerde);
      buyVol := true;
    end;

  Se (balancoVolumeAgressao <= bbInfAgressao) or 
     (balancoVolumeAgressao[1] <= bbInfAgressao) or 
     (balancoVolumeAgressao[2] <= bbInfAgressao) or 
     (balancoVolumeAgressao[3] <= bbInfAgressao) or 
     (balancoVolumeAgressao[4] <= bbInfAgressao) or 
     false entao
    begin
      // SetPlotColor(3,clVermelho);
      sellVol := true;
    end;
//  plot(bbSupAgressao);
//  plot2(bbInfAgressao);
//  plot3(balancoVolumeAgressao);


  // Variavel que contabiliza a maior parte do setup para compra
  buySignal := (Close > sFastMMs) and 
     (Close > sMediumMMs) and
     (macdval-macdmargin > sSignalMACD) and
     (Close > s2MVHigh) and  //Caso positivo do 2MV_Padrao
     (Abs(macdTrend) < macdMax ) and
     ((macdTrend[2] < macdTrend[1]) and (macdTrend[1] < macdTrend)) and
     (neutralCandle[1] or neutralCandle[2] or 
      neutralCandle[3] or neutralCandle[4] or
      neutralCandle[5] or neutralCandle[6]) and 
     (not((sMediumMMs[1] <= sMediumMMsMax) and (sMediumMMs[1] >= sMediumMMsMin)) and
      not((sMediumMMs[2] <= sMediumMMsMax) and (sMediumMMs[2] >= sMediumMMsMin))) and
      not((abs(macdTrend[0])<macdMin) and (abs(macdTrend[1])<macdMin) and (abs(macdTrend[2])<macdMin)) and 
      buyVol and
     (Close > Close[1]);
  
  // Variavel que contabiliza a maior parte do setup para venda   
  sellSignal := (Close < sFastMMs) and 
     (Close < sMediumMMs) and
     (macdval+macdmargin < sSignalMACD) and
     (Close < s2MVLow)  and  //Caso negativo do 2MV_Padrao    
     (Abs(macdTrend) < macdMax ) and
     ((macdTrend[2] > macdTrend[1]) and (macdTrend[1] > macdTrend)) and
     (neutralCandle[1] or neutralCandle[2] or
      neutralCandle[3] or neutralCandle[4] or
      neutralCandle[5] or neutralCandle[6]) and
     (not((sMediumMMs[1] <= sMediumMMsMax) and (sMediumMMs[1] >= sMediumMMsMin)) and
      not((sMediumMMs[2] <= sMediumMMsMax) and (sMediumMMs[2] >= sMediumMMsMin))) and
     not((abs(macdTrend[0])<macdMin) and (abs(macdTrend[1])<macdMin) and (abs(macdTrend[2])<macdMin)) and  
     sellVol and
     (Close < Close[1]);

  // Verificacao de dias e horarios em que vamos operar.    
  executeTrades := true;

  if (DayOfWeek(Date) = Monday) then
      begin
        if (not(operarSegunda)) then
           begin 
              executeTrades := false;
              ClosePosition;
           end
        else if (TIME <= horarioInicialSegunda) or 
           (TIME >= horarioFinalSegunda) then
           begin
              executeTrades := false;
              ClosePosition;
           end;      
      end
  else if (DayOfWeek(Date) = Tuesday) then
      begin
        if (not(operarTerca)) then
           begin 
              executeTrades := false;
              ClosePosition;
           end
        else if (TIME <= horarioInicialTerca) or 
           (TIME >= horarioFinalTerca) then
           begin
              executeTrades := false;
              ClosePosition;
           end;      
      end
  else if (DayOfWeek(Date) = Wednesday) then
      begin
        if (not(operarQuarta)) then
           begin 
              executeTrades := false;
              ClosePosition;
           end
        else if (TIME <= horarioInicialQuarta) or 
           (TIME >= horarioFinalQuarta) then
           begin
              executeTrades := false;
              ClosePosition;
           end;      
      end
  else if (DayOfWeek(Date) = Thursday) then
      begin
        if (not(operarQuinta)) then
           begin 
              executeTrades := false;
              ClosePosition;
           end
        else if (TIME <= horarioInicialQuinta) or 
           (TIME >= horarioFinalQuinta) then
           begin
              executeTrades := false;
              ClosePosition;
           end;      
      end      
  else if (DayOfWeek(Date) = Friday) then
     begin
        if (not(operarSexta)) then
           begin 
              executeTrades := false;
              ClosePosition;
           end
        else if (TIME <= horarioInicialSexta) or 
           (TIME >= horarioFinalSexta) then
           begin
              executeTrades := false;
              ClosePosition;
           end;
     end;

  if (executeTrades) then
    begin  // BEGIN 02      
      if (BuyPosition >= 1) then
        begin
          if (realizacaoParcial) and (BuyPosition = qtdeContratos) then
            begin
              SellShortLimit(AlvoCParcial, qtdeContratosParciais);
            end;

          if (stopViaMedia) and (Close <= sStopMMs) then
            begin
              CancelPendingOrders;
              SellToCoverAtMarket(BuyPosition);
              PaintBar(clYellow);
            end
          else if not(stopViaMedia) and (Open < Close[1]) then 
            begin
              CancelPendingOrders;        
              SellToCoverAtMarket(BuyPosition);
              PaintBar(clYellow);
            end
          else
              PaintBar(clGreen);
        end

      // Em caso de posicao vendida, baixar o stop ou stopar o trade
      else if (SellPosition >= 1) then
        begin
          if (realizacaoParcial) and (SellPosition = qtdeContratos) then
            begin
              BuyLimit(AlvoVParcial, qtdeContratosParciais);              
            end;

          if (stopViaMedia) and (Close >= sStopMMs) then
            begin
              CancelPendingOrders;        
              BuyToCoverAtMarket(SellPosition);
              PaintBar(clYellow);
            end
          else if not(stopViaMedia) and (Open > Close[1]) then 
            begin
              CancelPendingOrders;        
              BuyToCoverAtMarket(SellPosition);
              PaintBar(clYellow);
            end
          else
              PaintBar(clMaroon);
        end

      // Caso não se esteja nem comprado, nem vendido vamos
      // analisar se temos sinal de compra ou venda.
      else if (BuyPosition = 0) and (SellPosition = 0) then
        begin // BEGIN 03
            if (buySignal) then
               begin
                 if (BuyPosition = 0) and
                    (Close > Open) then
                   begin
                     EntradaC := Close+R;
                     StopC := Close-stopInit+stopVarianceInit;
                     AlvoCParcial := EntradaC+ptosRealizacaoParcialCompra;
            
                     BuyStop(EntradaC, EntradaC, qtdeContratos);                     
                     SellShortStop(StopC, StopC, qtdeContratos);
                     SellShortLimit(AlvoCParcial, qtdeContratosParciais);

                     PaintBar(clLime);
                   end;                 
               end
            else if (sellSignal) then
               begin                
                 if (SellPosition = 0) and
                    (Close < Open) then
                   begin
                     EntradaV := Close-R;
                     StopV := Close+stopInit-stopVarianceInit;
                     AlvoVParcial := EntradaV-ptosRealizacaoParcialVenda;

                     SellShortStop(EntradaV, EntradaV, qtdeContratos);                     
                     BuyStop(StopV, StopV, qtdeContratos);
                     BuyLimit(AlvoVParcial, qtdeContratosParciais);

                     PaintBar(clRed);
                   end;
               end;
 
        end; // END 03
    end; // END 02 
end; // END 01
